% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{rcpp_mmutil_aggregate_velocity}
\alias{rcpp_mmutil_aggregate_velocity}
\title{Compute RNA velocity comparing the spliced and unspliced
at the pseudo-bulk level (individual and cell type)}
\usage{
rcpp_mmutil_aggregate_velocity(
  spliced_mtx_file,
  unspliced_mtx_file,
  row_file,
  col_file,
  r_cols = NULL,
  r_indv = NULL,
  r_annot = NULL,
  r_lab_name = NULL,
  a0 = 1,
  b0 = 1,
  MAX_ITER = 100L,
  TOL = 1e-04,
  NUM_THREADS = 1L
)
}
\arguments{
\item{spliced_mtx_file}{spliced data file}

\item{unspliced_mtx_file}{unspliced data file}

\item{row_file}{row file (shared)}

\item{col_file}{column file (shared)}

\item{r_cols}{cell (col) names}

\item{r_indv}{membership for the cells (\code{r_cols})}

\item{r_annot}{label annotation for the (\code{r_cols})}

\item{r_lab_name}{label names (default: everything in \code{r_annot})}

\item{a0}{hyperparameter for gamma(a0, b0) (default: 1)}

\item{b0}{hyperparameter for gamma(a0, b0) (default: 1)}

\item{MAX_ITER}{maximum iteration for the delta estimation}

\item{TOL}{tolerance level for convergence test}

\item{NUM_THREADS}{number of threads (useful for many individuals)}

\item{spliced_col_file}{column file for the spliced mtx}

\item{unspliced_col_file}{column file for the unspliced}
}
\value{
a list of inference results
}
\description{
Compute RNA velocity comparing the spliced and unspliced
at the pseudo-bulk level (individual and cell type)
}
\examples{

options(stringsAsFactors = FALSE)
set.seed(1)
nn <- 3000
rr <- rgamma(nn, 6.25, 6.25) # 1000 cells
uu <- matrix(rgamma(100 * 3, 1, 1), 100, 3)
dd <- matrix(rgamma(100 * 3, 1, 1/10), 100, 3)
ss <- uu / (dd + 1e-2)
ind <- sample(3, nn, replace=TRUE)

spliced <- mmutilR::rcpp_mmutil_simulate_poisson(ss, rr,
                                                 "sim_test_raw_spliced",
                                                 r_indv = ind)

unspliced <- mmutilR::rcpp_mmutil_simulate_poisson(uu, rr,
                                                   "sim_test_raw_unspliced",
                                                   r_indv = ind)

.col <- sort(intersect(read.table(spliced$col)$V1,
                       read.table(unspliced$col)$V1))

spliced <- mmutilR::rcpp_mmutil_copy_selected_columns(
                        spliced$mtx,
                        spliced$row,
                        spliced$col,
                        .col,
                        "sim_test_spliced")

unspliced <- mmutilR::rcpp_mmutil_copy_selected_columns(
                        unspliced$mtx,
                        unspliced$row,
                        unspliced$col,
                        .col,
                        "sim_test_unspliced")

.out <- mmutilR::rcpp_mmutil_aggregate_velocity(
                     spliced$mtx,
                     unspliced$mtx,
                     spliced$row,
                     spliced$col,
                     r_col = .col,
                     r_indv = ind[.col],
                     a0 = 1, b0 = 1)

.agg.u <- mmutilR::rcpp_mmutil_aggregate(
                       unspliced$mtx,
                       unspliced$row,
                       unspliced$col,
                       r_col = .col,
                       r_indv = ind[.col],
                       a0 = 1, b0 = 1)

.agg.s <- mmutilR::rcpp_mmutil_aggregate(
                       spliced$mtx,
                       spliced$row,
                       spliced$col,
                       r_col = .col,
                       r_indv = ind[.col],
                       a0 = 1, b0 = 1)

par(mfrow=c(1, ncol(.out$delta)))
for(k in 1:ncol(.out$delta)){
    plot(.agg.u$mu[,k]/.agg.s$mu[,k],
         .out$delta[,k],
         log = "xy",
         pch = 1,
         ylab = "predicted",
         xlab = "true")
    abline(a=0, b=1, col=3)
}


## clean up temp directory
unlink(list.files(pattern = "sim_test"))

}
