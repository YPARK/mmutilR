% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Methods.R
\name{make.cocoa}
\alias{make.cocoa}
\title{Counterfactual confounder adjustment for individual-level
differential expression analysis}
\usage{
make.cocoa(
  mtx.data,
  celltype,
  cell2indv,
  indv2exp = NULL,
  knn = 10,
  celltype.mat = NULL,
  .rank = 10,
  .take.ln = TRUE,
  .pca.reg = 1,
  .col.norm = 10000,
  .em.iter = 0,
  .em.tol = 1e-04,
  num.threads = 1,
  ...
)
}
\arguments{
\item{mtx.data}{fileset.header ($mtx, $row, $col, $idx)}

\item{celltype}{celltype/cluster assignments (1 x cells or just a single string)}

\item{cell2indv}{cell-level individual assignments (cells x 2), cell -> indv}

\item{indv2exp}{individual treatment/exposure assignments (indiv x 2), indv -> exposure}

\item{knn}{number of neighbours \code{k} in kNN for matching}

\item{celltype.mat}{celltype/cluster assignment matrix (cells x cell types)}

\item{.rank}{SVD rank for spectral matching}

\item{.take.ln}{take log(1 + x) trans or not}

\item{.pca.reg}{regularization parameter (default = 1)}

\item{.col.norm}{column normalization for SVD}

\item{.em.iter}{EM iteration for factorization (default: 0)}

\item{.em.tol}{EM convergence (default: 1e-4)}

\item{num.threads}{number of threads for multi-core processing}

\item{a0}{hyperparameter for gamma(a0, b0) (default: 1)}

\item{b0}{hyperparameter for gamma(a0, b0) (default: 1)}

\item{eps}{small number (default: 1e-8)}
}
\value{
a list of sufficient statistics matrices
}
\description{
Counterfactual confounder adjustment for individual-level
differential expression analysis
}
\details{
If treatment/exposure variables are assigned, it will calculate
counterfactual individual effects (\code{resid.mu}).  Otherwise, it will
only compute average effect estimations (\code{mu}).
}
\examples{

sim.data <- make.sc.deg("temp",
                        nind = 20,
                        ngene = 100,
                        ncausal = 3,
                        ncovar.conf = 3,
                        ncovar.batch = 0,
                          ncell.ind = 10,
                          pve.1 = .3,
                          pve.c = .5,
                          pve.a = .5,
                          rseed = 13,
                          exposure.type = "binary")

mtx.data <- sim.data$data

cell2indv <- read.table(sim.data$data$indv,
                        header=FALSE,
                        col.names=c("cell","indv"))

nind <- length(sim.data$indv$W)
indv2exp <- data.frame(indv=1:nind, exp = sim.data$indv$W)

.cocoa <- make.cocoa(mtx.data, "bulk", cell2indv, indv2exp, knn = 50)
.stat <- make.cocoa(mtx.data, "bulk", cell2indv)

ncausal <- length(sim.data$indv$causal)
ngene <- nrow(.cocoa$resid.mu)

par(mfrow=c(2, ncausal))
W <- sim.data$indv$W
for(k in sim.data$indv$causal){
    y0 <- .cocoa$resid.mu[k, W == 0]
    y1 <- .cocoa$resid.mu[k, W == 1]
    boxplot(y0, y1, main=k)
}

W <- sim.data$indv$W
for(k in sim.data$indv$causal){
    y0 <- .stat$mu[k, W == 0]
    y1 <- .stat$mu[k, W == 1]
    boxplot(y0, y1, main=k)
}

par(mfrow=c(2, ncausal))
for(k in sample(setdiff(1:ngene, sim.data$indv$causal), ncausal)){
    y0 <- .cocoa$resid.mu[k, W == 0]
    y1 <- .cocoa$resid.mu[k, W == 1]
    boxplot(y0, y1, main=k)
}
for(k in sample(setdiff(1:ngene, sim.data$indv$causal), ncausal)){
    y0 <- .stat$mu[k, W == 0]
    y1 <- .stat$mu[k, W == 1]
    boxplot(y0, y1, main=k)
}

unlink(list.files(pattern = "temp"))

}
